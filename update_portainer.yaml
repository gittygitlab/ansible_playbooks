---
- hosts: all
  gather_facts: no
  become: yes

  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_remote_tmp: /tmp/.ansible_tmp

    portainer_container_name: portainer
    portainer_image_lts: portainer/portainer-ce:lts
    portainer_ports_args: "-p 8000:8000 -p 9443:9443"
    portainer_volumes_args: "-v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data"
    portainer_restart_policy_arg: "--restart=always"

  tasks:
    - name: Stop Portainer container if running
      shell: "docker stop {{ portainer_container_name }} || true"
      register: stop_result
      changed_when: stop_result.rc == 0

    - name: Remove Portainer container if it exists
      shell: "docker rm {{ portainer_container_name }} || true"
      register: rm_result
      changed_when: rm_result.rc == 0

    - name: Pull newest Portainer LTS image
      shell: "docker pull {{ portainer_image_lts }}"
      register: pull_result

    - name: Run Portainer container
      shell: >
        docker run -d
        {{ portainer_ports_args }}
        {{ portainer_restart_policy_arg }}
        --name={{ portainer_container_name }}
        {{ portainer_volumes_args }}
        {{ portainer_image_lts }}
      register: run_result

    - name: Display Portainer run command output (optional)
      ansible.builtin.debug:
        msg: "Portainer run command stdout: {{ run_result.stdout }}"
      when: run_result is success
